(define (square x) (* x x))

(define (append list1 list2)
  (if (null? list1)
      list2
      (cons (car list1) 
            (append (cdr list1) 
                    list2))))

(define (square-list items)
  (define (iter things answer)
    (if (null? things)
        answer
        (iter (cdr things)
              (append (list (square (car things)))
                    answer))))
  (iter items '()))

(square-list '(1 2 3))

